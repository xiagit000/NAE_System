/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev: Rev $
 * $Author: Author $
 * $LastChangedDate: LastChangedDate $
 *
 */

package com.boventech.gplearn.util;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.context.ApplicationEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.transaction.annotation.Transactional;

import com.boventech.gplearn.dao.impl.BaseDaoImpl;
import com.boventech.gplearn.entity.City;

@SuppressWarnings("rawtypes")
@Transactional
public class ApplicationEventListener extends BaseDaoImpl<City, Long> implements ApplicationListener {

    private static final String DEFAULT_LOCAL_PATH = "/resources/city.xml";

    @PersistenceContext
    private EntityManager entityManager;

    @Override
    public void onApplicationEvent(ApplicationEvent event) {
        if (event instanceof ContextRefreshedEvent) {

            // 从xml文件获取所有的省市
            GetCitiesFromXml cities = new GetCitiesFromXml();

            // 获取当前服务器下的路径
            String path = System.getProperty("gplearn.root");
            try {
                int dates = this.executeCountQuery("from City");
                if (dates == 0) {
                    saveCities(cities.getCities(path + DEFAULT_LOCAL_PATH));
                } else {
                    System.out.println("数据已加载");
                }
            } catch (Exception e) {
            }
        }
    }

    private void saveCities(List<City> cities) {
        int i = 0;
        for (City city : cities) {
            entityManager.persist(city);
            if (i % 30 == 0) {
                entityManager.flush();
                entityManager.clear();
            }
        }
    }

}
