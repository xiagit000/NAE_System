/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev: Rev $
 * $Author: Author $
 * $LastChangedDate: LastChangedDate $
 *
 */

package com.boventech.gplearn.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.boventech.gplearn.dao.LearnClassDao;
import com.boventech.gplearn.entity.LearnClass;
import com.boventech.gplearn.service.LearnClassService;

@Service
@Transactional
public class LearnClassServiceImpl implements LearnClassService {

    @Autowired
    private LearnClassDao learnClassDao;

    @Override
    public void save(LearnClass t) {
        this.learnClassDao.save(t);
    }

    @Override
    public void delete(LearnClass t) {
        this.learnClassDao.delete(t);
    }

    @Override
    public void delete(Long id) {
        this.learnClassDao.deleteById(id);
    }

    @Override
    public void update(LearnClass t) {
        this.learnClassDao.update(t);
    }

    @Override
    public LearnClass findById(Long id) {
        return this.learnClassDao.findByID(id);
    }

    @Override
    public List<LearnClass> listAll() {
        return this.learnClassDao.listAll();
    }

    @Override
    public boolean isExistByCode(String code) {
        return this.learnClassDao.isExistByCode(code);
    }

    @Override
    public boolean isExistByCodeWhitoutCurrent(LearnClass learnClass) {
        return this.learnClassDao.isExistByCodeWhitoutCurrent(learnClass);
    }

    @Override
    public List<LearnClass> listEnable() {
        return this.learnClassDao.listEnable();
    }

    @Override
    public boolean checkExist() {
        return !this.learnClassDao.listEnable().isEmpty();
    }
}
