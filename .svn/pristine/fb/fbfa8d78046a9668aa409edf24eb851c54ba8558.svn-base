package com.boventech.gplearn.controller;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.boventech.gplearn.entity.Constants;
import com.boventech.gplearn.entity.User;
import com.boventech.gplearn.entity.User.UserType;
import com.boventech.gplearn.exception.LocalDatabaseUserNotFoundException;
import com.boventech.gplearn.service.UserService;
import com.boventech.gplearn.util.LoadProperties;

@Controller
public class CommonController {
	
	private static final Logger logger = LoggerFactory.getLogger(CommonController.class);
	
	@Autowired
	private UserService userService;
	
	@RequestMapping(value="/")
	public String hello(HttpServletRequest request,Model model){
		Object user=request.getSession().getAttribute("currentUser");
		if(null == user){
			/**
			 * TODO 准备门户数据
			 */
			return "common/login";
		}
		//根据不同权限跳向不同页面
		User currentUser = (User)user;
		UserType currentRole = currentUser.getUserType();
		return getReturnPage(currentRole);
	}

	@RequestMapping(value="/login")
	public String login(HttpServletRequest request){
		Object user=request.getSession().getAttribute("currentUser");
		String loginName = request.getRemoteUser();
		User currentUser=null;
		try {
			currentUser = findcurrentUser(loginName);
		} catch (LocalDatabaseUserNotFoundException e) {
			logger.error(e.getMessage());
			return "redirect:/";
		}
		if(user==null && currentUser!=null){
			request.getSession().setAttribute("currentUser", currentUser);
		}
		//根据不同权限跳向不同页面
		UserType currentRole = currentUser.getUserType();
		return getReturnPage(currentRole);
	}
	
	@RequestMapping(value="/logout")
	public void logout(HttpServletRequest request,HttpServletResponse response){
//		CASPlatformHttpClient client = new CASPlatformHttpClient();
//		client.logout();
		HttpSession session = request.getSession();
		session.removeAttribute("siteMenu");
		session.removeAttribute("siteItem");
		session.removeAttribute("currentUser");
		try {
			String logoutURL=LoadProperties.getProperty(Constants.CAS_BASE_URL_KEY)+
							LoadProperties.getProperty(Constants.CAS_LOGOUT_URL_KEY);
			response.sendRedirect(logoutURL);
		} catch (IOException e) {
			logger.error(e.getMessage());
		}
	}
	
	private String getReturnPage(UserType currentRole) {
		String returnPage="common/login";
		if(currentRole.equals(UserType.System_Administrator)){
			returnPage="common/admin";
		}
		if(currentRole.equals(UserType.Teacher)){
			returnPage="common/teacher";
		}
		if(currentRole.equals(UserType.Project_Specialists)){
			returnPage="common/project";
		}
		if(currentRole.equals(UserType.Province_Supervisor)){
			returnPage="common/province";
		}
		if(currentRole.equals(UserType.School_Supervisor)){
			returnPage="common/school";
		}
		if(currentRole.equals(UserType.Student)){
			returnPage="common/student";
		}
		if(currentRole.equals(UserType.Subject_Specialists)){
			returnPage="common/discipline";
		}
		return returnPage;
	}
	
	private User findcurrentUser(String loginName) throws LocalDatabaseUserNotFoundException{
		User currentUser = null;
		currentUser = userService.findByLoginName(loginName);
		if(null == currentUser){
			throw new LocalDatabaseUserNotFoundException();
		}
		return currentUser;
	}
}
